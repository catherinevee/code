name: Node.js Application Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Get the code
        uses: actions/checkout@v4

      # Set up Node.js with automatic npm caching
      # The cache speeds up builds by avoiding repeated downloads
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      # Use npm ci instead of npm install for CI environments
      # npm ci is faster and more reliable for automated builds
      - name: Install dependencies
        run: npm ci

      # Run linting before tests to catch style issues early
      - name: Check code style
        run: npm run lint

      # Run tests with coverage reporting
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      # Upload coverage results to track code quality over time
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build the application for production
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      # Store the build output for deployment jobs
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 30
