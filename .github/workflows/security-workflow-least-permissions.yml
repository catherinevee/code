name: Least Privilege Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Explicitly set minimal permissions
permissions:
  contents: read # Read repository contents
  actions: read # Read workflow status
  checks: write # Write check status
  pull-requests: write # Comment on PRs

jobs:
  test:
    runs-on: ubuntu-latest
    # This job only needs to read code and write test results
    permissions:
      contents: read
      checks: write

    steps:
      - uses: actions/checkout@v4

      - name: Run tests
        run: |
          echo "Running tests..."
          # Test commands here

      - name: Report test results
        uses: actions/github-script@v7
        with:
          script: |
            // This action can create check runs because we have checks: write permission
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Test Results',
              head_sha: context.sha,
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'All tests passed',
                summary: 'Test suite completed successfully'
              }
            });

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment: production

    # Deployment needs different permissions
    permissions:
      contents: read
      deployments: write

    steps:
      - uses: actions/checkout@v4

      - name: Create deployment
        uses: actions/github-script@v7
        with:
          script: |
            // Create deployment record
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              auto_merge: false
            });

            // Store deployment ID for status updates
            core.setOutput('deployment-id', deployment.data.id);

      - name: Deploy application
        run: |
          echo "Deploying application..."
          # Deployment commands here

      - name: Update deployment status
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: '${{ steps.deploy.outputs.deployment-id }}',
              state: 'success',
              environment: 'production',
              environment_url: 'https://myapp.com'
            });
