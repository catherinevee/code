variables:
  storageAccountName: "tfstatecfriy"
  containerName: "tfstate-container"
  terraform_version: 1.11.3
  resourceGroup: "polandcentralrg-1"
  backendServiceArm: "catherinevee_manid"
  backendAzureRmResourceGroupName: $(resourceGroup)
  backendAzureRmStorageAccountName: ${storageAccountName}
  backendAzureRmContainerName: $(containerName)
  backendAzureRmKey: $(secrets.AZURE_SA_TFSTATE_KEY)
 

trigger:
- main
name: $(BuildDefinitionName)_$(date:yyyyMMdd)$(rev:.r) 
pr: none


stages :  
  - stage: terraform_plan_apply
    jobs:
      - job: terraform_apply
        steps:
          - task: TerraformInstaller@0
            displayName: 'install'
            inputs:
              terraformVersion: '${{ variables.terraform_version }}'        
          - task: TerraformTaskV2@2
            displayName: 'init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '${{ variables.backendServiceArm }}'
              backendAzureRmResourceGroupName: '${{ variables.backendAzureRmResourceGroupName }}'
              backendAzureRmStorageAccountName: '${{ variables.backendAzureRmStorageAccountName }}'
              backendAzureRmContainerName: '${{ variables.backendAzureRmContainerName }}'
              backendAzureRmKey: '${{ variables.backendAzureRmKey }}'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
          - task: TerraformTaskV2@2
            displayName: 'plan'
            condition: and(succeeded(), eq(variables['Action'], 'Plan'))
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: '${{ variables.backendServiceArm }}'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
          - task: TerraformTaskV2@2
            displayName: 'apply'
            condition: and(succeeded(), eq(variables['Action'], 'Apply'))
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: '${{ variables.backendServiceArm }}'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'