# nginx.conf - Optimized configuration for lightweight webpage
# This configuration focuses on performance, security, and error handling

# Main context - global directives
user nginx;
worker_processes auto;  # Automatically detect number of CPU cores
error_log /var/log/nginx/error.log warn;  # Log errors for debugging
pid /var/run/nginx.pid;

# Events context - connection processing
events {
    worker_connections 1024;  # Maximum connections per worker
    use epoll;  # Efficient connection method for Linux
    multi_accept on;  # Accept multiple connections at once
}

# HTTP context - main configuration
http {
    # MIME type configuration
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format for better debugging and monitoring
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;  # Efficient file serving
    tcp_nopush on;  # Send headers in one piece
    tcp_nodelay on;  # Don't buffer data-sends
    keepalive_timeout 65;  # Keep connections alive for reuse
    keepalive_requests 100;  # Maximum requests per connection
    
    # File upload limits
    client_max_body_size 10M;
    client_body_timeout 12;
    client_header_timeout 12;
    
    # Buffer sizes for better performance
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;  # Enable Vary: Accept-Encoding header
    gzip_min_length 1024;  # Only compress files larger than 1KB
    gzip_proxied any;  # Compress for all proxied requests
    gzip_comp_level 6;  # Compression level (1-9, 6 is optimal)
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;
    
    # Security headers for better protection
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Hide nginx version for security
    server_tokens off;
    
    # Rate limiting for DDoS protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Server block - main website configuration
    server {
        # Listen on port 80 (HTTP)
        listen 80;
        listen [::]:80;  # IPv6 support
        
        # Server name (can be changed to your domain)
        server_name localhost _;
        
        # Document root where files are served from
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Character set
        charset utf-8;
        
        # Access and error logs for this server
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        # Main location block for serving files
        location / {
            try_files $uri $uri/ /index.html;  # Fallback to index.html for SPA
            
            # Caching headers for static content
            expires 1h;
            add_header Cache-Control "public, immutable";
            
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;
        }
        
        # Specific caching for CSS and JS files
        location ~* \.(css|js)$ {
            expires 1y;  # Cache for 1 year
            add_header Cache-Control "public, immutable";
            
            # Enable gzip compression
            gzip_static on;  # Serve pre-compressed files if available
        }
        
        # Caching for images and fonts
        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;  # Cache for 1 year
            add_header Cache-Control "public, immutable";
            
            # Optional: Enable gzip for SVG files
            location ~* \.svg$ {
                gzip_static on;
            }
        }
        
        # Security: Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Favicon handling to prevent 404 errors
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Robots.txt handling
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
        
        # Health check endpoint for monitoring
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        # Error page locations
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
        
        # Security: Prevent access to PHP files (if any exist)
        location ~ \.php$ {
            deny all;
        }
        
        # Optional: API rate limiting for future endpoints
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            # CORS headers for API requests
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
    
    # Optional: HTTPS server block (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name localhost;
    #     
    #     # SSL certificate configuration
    #     ssl_certificate /path/to/certificate.pem;
    #     ssl_certificate_key /path/to/private.key;
    #     
    #     # SSL optimization
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:MozTLS:10m;
    #     ssl_session_tickets off;
    #     
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # HSTS header
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # Include all location blocks from HTTP server
    #     include /etc/nginx/locations.conf;
    # }
    
    # Include additional configuration files
    include /etc/nginx/conf.d/*.conf;
}