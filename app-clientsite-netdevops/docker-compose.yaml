# Docker Compose configuration for cute website
# Provides easy deployment with proper networking and volume management

version: '3.8'

services:
  cute-website:
    # Build configuration
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        - BUILDKIT_INLINE_CACHE=1
    
    # Container name
    container_name: cute-website
    
    # Restart policy
    restart: unless-stopped
    
    # Port mapping (host:container)
    ports:
      - "80:8080"     # HTTP
      - "443:8080"    # HTTPS (if using reverse proxy)
    
    # Environment variables
    environment:
      - TZ=UTC
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=1024
    
    # Resource limits for production stability
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 32M
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Volume mounts for easier development and logging
    volumes:
      # Bind mount for development (comment out for production)
      - ./src:/usr/share/nginx/html:ro
      
      # Log volumes for persistence
      - nginx-logs:/var/log/nginx
      
      # Cache volume for better performance
      - nginx-cache:/var/cache/nginx
    
    # Network configuration
    networks:
      - cute-network
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # User namespace remapping
    user: "1001:1001"
    
    # Read-only root filesystem for security
    read_only: true
    
    # Temporary filesystems for writable directories
    tmpfs:
      - /tmp
      - /var/run
      - /var/cache/nginx:uid=1001,gid=1001

  # Optional: Reverse proxy with SSL termination
  reverse-proxy:
    image: nginx:1.25-alpine
    container_name: cute-reverse-proxy
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/reverse-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    networks:
      - cute-network
    depends_on:
      - cute-website
    profiles:
      - ssl  # Only start when 'ssl' profile is specified

# Named volumes for data persistence
volumes:
  nginx-logs:
    driver: local
  nginx-cache:
    driver: local

# Custom network for container communication
networks:
  cute-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16